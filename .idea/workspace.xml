<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5e6cf639-c049-438c-ba34-fee79f975ce4" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.github/workflows/deploy.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.husky/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.husky/commit-msg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.husky/post-merge" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.husky/pre-commit" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/jsLinters/eslint.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/prettier.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/loading-spinner/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/loading-spinner/loading-spinner.component.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/loading-spinner/loading-spinner.styles.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/use-safe-async/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/use-safe-async/use-safe-async.hook.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/use-safe-async/use-safe-async.reducer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/use-safe-async/use-safe-async.test.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/hooks/use-safe-async/use-safe-async.types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/utils/type-guarding/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app/registry.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/registry.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/button/button.component.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/button/button.component.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/button/button.styles.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/button/button.styles.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/text-input/text-input.component.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/text-input/text-input.component.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/text-input/text-input.styles.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/text-input/text-input.styles.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/domains/customers/new-customer/new-customer.component.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/domains/customers/new-customer/new-customer.component.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/global.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/global.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/services/customers/create-account.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/services/customers/create-account.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2RSQxcmKMgHf3JOfGjSfTjiNuml" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "code.cleanup.on.save": "true",
    "last_opened_file_path": "/Users/michaelatherton/Development/memba/memba-web-app/src/components",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/michaelatherton/Development/memba/memba-web-app/node_modules/prettier",
    "settings.editor.selected.configurable": "actions.on.save",
    "ts.external.directory.path": "/Users/michaelatherton/Development/memba/memba-web-app/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/components" />
      <recent name="$PROJECT_DIR$/src/hooks" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/.husky" />
      <recent name="$PROJECT_DIR$/deployment" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5e6cf639-c049-438c-ba34-fee79f975ce4" name="Changes" comment="" />
      <created>1687241249161</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1687241249161</updated>
      <workItem from="1687241250486" duration="10535000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>